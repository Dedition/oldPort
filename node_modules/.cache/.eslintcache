[{"/Users/Dedition/Downloads/Portfolio/newport/src/index.js":"1","/Users/Dedition/Downloads/Portfolio/newport/src/reportWebVitals.js":"2","/Users/Dedition/Downloads/Portfolio/newport/src/App.js":"3","/Users/Dedition/Downloads/Portfolio/newport/src/components/SkillsPage/Skills.js":"4","/Users/Dedition/Downloads/Portfolio/newport/src/components/NavbarPage/Navbar.js":"5","/Users/Dedition/Downloads/Portfolio/newport/src/context/MenuContext.js":"6","/Users/Dedition/Downloads/Portfolio/newport/src/components/HomePage/Home.js":"7","/Users/Dedition/Downloads/Portfolio/newport/src/components/ContactPage/Contact.js":"8","/Users/Dedition/Downloads/Portfolio/newport/src/components/AboutPage/About.js":"9","/Users/Dedition/Downloads/Portfolio/newport/src/components/ProjectsPage/Projects.js":"10","/Users/Dedition/Downloads/Portfolio/newport/src/components/WorkPage/Work.js":"11","/Users/Dedition/Downloads/Portfolio/newport/src/components/MenuPage/MenuPage.js":"12","/Users/Dedition/Downloads/Portfolio/newport/src/components/MenuPage/MenuList.js":"13"},{"size":535,"mtime":1660592993028,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1660592993029,"results":"16","hashOfConfig":"15"},{"size":1694,"mtime":1661207254597,"results":"17","hashOfConfig":"15"},{"size":2639,"mtime":1661127902374,"results":"18","hashOfConfig":"15"},{"size":446,"mtime":1660852198363,"results":"19","hashOfConfig":"15"},{"size":86,"mtime":1660674156457,"results":"20","hashOfConfig":"15"},{"size":1027,"mtime":1660780067132,"results":"21","hashOfConfig":"15"},{"size":0,"mtime":1660674156455,"results":"22","hashOfConfig":"15"},{"size":6026,"mtime":1661212038177,"results":"23","hashOfConfig":"15"},{"size":21643,"mtime":1661203440306,"results":"24","hashOfConfig":"15"},{"size":566,"mtime":1661206193085,"results":"25","hashOfConfig":"15"},{"size":4418,"mtime":1661206193084,"results":"26","hashOfConfig":"15"},{"size":5861,"mtime":1661206193083,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qc9p5s",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"/Users/Dedition/Downloads/Portfolio/newport/src/index.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/reportWebVitals.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/App.js",["72"],[],"//*                           React\nimport { useState } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n//*                       React Libraries\nimport { AnimatePresence } from \"framer-motion\";\n\n//*                     Files & Components\nimport Home from './components/HomePage/Home.js'\nimport About from './components/AboutPage/About';\nimport Skills from \"./components/SkillsPage/Skills.js\";\nimport Projects from './components/ProjectsPage/Projects';\nimport Work from './components/WorkPage/Work';\nimport Contact from './components/ContactPage/Contact';\nimport Navbar from \"./components/NavbarPage/Navbar.js\";\n\n//*                           Context\nimport { MenuContext } from \"./context/MenuContext\";\n\n//*                          Styling\nimport \"./styles/index.scss\";\n\n\nfunction App() {\n  const [menuText, setMenuText] = useState(\"Home\");\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <MenuContext.Provider value={{ menuText, setMenuText }}>\n        <AnimatePresence exitBeforeEnter>\n          <Routes>\n            {[\"/\", \"/*\"].map((path, idx) => {\n              return (\n                <Route path={path} element={\n                  <Home />}\n                  key={idx}\n                />\n              );\n            })}\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/skills\" element={<Skills />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            {/* <Route path=\"/work\" element={<Work />} /> */}\n            <Route path=\"/contact\" element={<Contact />} />\n          </Routes>\n        </AnimatePresence>\n      </MenuContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/Dedition/Downloads/Portfolio/newport/src/components/SkillsPage/Skills.js",["73"],[],"import { motion } from 'framer-motion';\nimport { useSpring, animated } from \"react-spring\";\n\nconst Skills = () => {\n    const anim = useSpring({\n        from: {\n            opacity: 0,\n            transform: \"translateY(20px)\",\n        },\n        to: {\n            opacity: 1,\n            transform: \"translateY(0px)\",\n        },\n    });\n    return (\n        <motion.main className='mainContainer mainSkills' style={anim} exit={{ opacity: 0 }}>\n            <h2>Skills & Technologies</h2>\n            <div className='skillsContainer'>\n                <span className=\"skillsContainer__python\">Python</span>\n                <span className=\"skillsContainer__js\">Javascript</span>\n                <span className=\"skillsContainer__npm\">NPM</span>\n                <span className=\"skillsContainer__node\">NodeJS</span>\n                <span className=\"skillsContainer__html\">HTML5</span>\n                <span className=\"skillsContainer__sass\">Sass</span>\n                <span className=\"skillsContainer__css\">CSS3</span>\n                <span className=\"skillsContainer__pug\">PugJS</span>\n                <span className=\"skillsContainer__react\">ReactJS</span>\n                <span className=\"skillsContainer__redux\">Redux</span>\n                <span className=\"skillsContainer__react\">React-Router</span>\n                <span className=\"skillsContainer__react\">React-Spring</span>\n                <span className=\"skillsContainer__react\">React-Hooks</span>\n                <span className=\"skillsContainer__flask\">Flask</span>\n                <span className=\"skillsContainer__flask\">Flask-SQLAlchemy</span>\n                <span className=\"skillsContainer__postgres\">PostgreSQL</span>\n                <span className=\"skillsContainer__js\">Express.js</span>\n                <span className=\"skillsContainer__sequelize\">Sequelize</span>\n                {/* <span className=\"skillsContainer__js\">NodeJS</span> */}\n                <span className=\"skillsContainer__docker\">Docker</span>\n                <span className=\"skillsContainer__aws\">AWS S3</span>\n                <span className=\"skillsContainer__heroku\">Heroku</span>\n                <span className=\"skillsContainer__github\">Github</span>\n                <span className=\"skillsContainer__git\">Git</span>\n                <span className=\"skillsContainer__scrum\">Test-Driven Development</span>\n                <span className=\"skillsContainer__scrum\">SCRUM</span>\n                <span className=\"skillsContainer__scrum\">Kanban</span>\n                <span className=\"skillsContainer__api\">REST API</span>\n            </div>\n        </motion.main>\n    );\n}\n\nexport default Skills;\n","/Users/Dedition/Downloads/Portfolio/newport/src/components/NavbarPage/Navbar.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/context/MenuContext.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/components/HomePage/Home.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/components/ContactPage/Contact.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/components/AboutPage/About.js",["74","75","76","77"],[],"import { motion } from \"framer-motion\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useEffect, useState } from \"react\";\n\nconst AboutMePage = () => {\n    const anim = useSpring({\n        from: {\n            opacity: 0,\n            transform: \"translateY(20px)\",\n        },\n        to: {\n            opacity: 1,\n            transform: \"translateY(0px)\",\n        },\n    });\n\n    return (\n        <>\n            <motion.main className=\"mainAbout\" exit={{ opacity: 0 }}>\n                <>\n                    <h2>About me</h2>\n                </>\n\n                <div className=\"aboutContainer\">\n                    <>\n                        <p>\n                            I like to consider myself one of the lucky ones. Old enough to\n                            remember the days where technology didn't dominate the world,\n                            young enough to appreciate the qualitative improvement that came\n                            with technological innovation. <br /><br />\n                            Growing up, I was fortunate enough to be surrounded by people who\n                            knew how to handle a business but not how they could weave in technology to\n                            help them achieve greater heights.\n                            <br /><br />Until recently in life, I was one of those individuals.<br /><br />\n                            What I now bring to the table is a new perspective on the world of\n                            business technological needs. I know how business needs and technological solutions\n                            can meet to obtain an outcome that is beneficial to everyone involved.\n                            {/* <br /><br />\n                            Technically speaking:\n                            I am experienced in Software Engineering, Web Development, Economics, and Business.\n\n                            <br /><br />\n                            Within my assortment of varied skills, I am also accomplished in leveraging AGILE methodologies\n                            to create and maintain software.\n                            My preferred method of development is\n                            through the use of the Kanban methodology when development time allows for it.\n                            Adversely, I am also a strong believer in the use of the\n                            SCRUM methodology for similar reasons. */}\n                        </p>\n                    </>\n                    <>\n                        <div className=\"aboutStrong\">\n                            {/* <span>“Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live”\n                                ― John Woods</span> */}\n                            <span>Ambition </span>\n                            <span>is </span>\n                            <span>the </span>\n                            <span>path </span>\n                            <span>to </span>\n                            <span>success. </span>\n                            <span>Persistence is the vehicle you arrive in. </span>\n                            <span>- Bill Bradley</span>\n                        </div>\n                    </>\n\n                    <br />\n                    <>\n                        <div className=\"second__heading\">\n                            <span>But who am I as a developer?</span>\n                        </div>\n                        <p className=\"second__heading-text\">\n                            As a developer, I am a person who is passionate about technology and\n                            the way it can be used to solve problems. I am a problem solver, a\n                            solutions architect, a scholar and a leader.\n                            I'm not someone who is ashamed of asking for help - but I'm also not\n                            someone who is afraid to Google for 10 hours first. <br /><br />\n                            I am your next hire.\n\n                            <br /><br />\n                            I am experienced in Software Engineering, Web Development, Economics, and Business.\n\n                            <br /><br />\n                            Within my assortment of varied skills, I am also accomplished in leveraging AGILE methodologies\n                            to create and maintain software.\n                            My preferred method of development is\n                            through the use of the Kanban methodology when development time allows for it.\n                            Adversely, I am also a strong believer in the use of the\n                            SCRUM methodology for similar reasons.\n\n                            <br />Contact me and let me know how I can help meet\n                            your business needs.\n                        </p>\n                    </>\n\n                    {/* <div className=\"second__heading\"></div> */}\n\n                    <div className=\"aboutContact\">\n                        <>\n                            <a className=\"contactLink\" href=\"mailto:yems500@gmail.com\">\n                                <span>Contact me</span>\n                                <div className=\"barHover\"></div>{\" \"}\n                            </a>\n                        </>\n                        <a href=\"https://www.linkedin.com/in/leo-l-79a260b0/\" className=\"linkedin\">\n                            <span>LinkedIn</span>\n                            <div className=\"barHover\"></div>{\" \"}\n                        </a>\n                        <a href=\"https://github.com/Dedition\" className=\"github\">\n                            {/* <i className=\"fab fa-github\"></i> */}\n                            <span>Github</span>\n                            <div className=\"barHover\"></div>{\" \"}\n                        </a>\n                    </div>\n                </div>\n            </motion.main>\n        </>\n    );\n}\n\nexport default AboutMePage;\n","/Users/Dedition/Downloads/Portfolio/newport/src/components/ProjectsPage/Projects.js",["78","79","80","81"],[],"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\n\n\nconst Projects = () => {\n    const [isVideo1Displayed, setIsVideo1Displayed] = useState(false);\n    const [isVideo2Displayed, setIsVideo2Displayed] = useState(false);\n    const [isVideo3Displayed, setIsVideo3Displayed] = useState(false);\n    const [isVideo4Displayed, setIsVideo4Displayed] = useState(false);\n    const [isVideo5Displayed, setIsVideo5Displayed] = useState(false);\n    const [isVideo6Displayed, setIsVideo6Displayed] = useState(false);\n\n    const getVideoDisplayed = (index) => {\n        if (`isVideo${index}Displayed`) return 3;\n        else return -2;\n    };\n\n    const onWheel = (e) => {\n        if (window.innerWidth <= 768) return;\n\n        const container = document.querySelector(\".projectsScroll\");\n        const containerScrollPosition =\n            document.querySelector(\".projectsScroll\").scrollLeft;\n        container.scrollTo({\n            top: 0,\n            left: containerScrollPosition + e.deltaY * 7.5,\n            behaviour: \"smooth\",\n        });\n    };\n\n    return (\n        <>\n            <motion.main\n                className=\"mainContainer mainContainerProjects\"\n                exit={{ opacity: 0 }}\n            >\n                <section className=\"projectsScroll\" onWheel={onWheel}>\n                    <div className=\"project\">\n                        <div className=\"thumbnail project6\">\n                            <img\n                                src=\"/assets/logos/flickrlogo.png\"\n                                alt=\"Flickr clone icon\"\n                            />\n                            <h2>Flickr Clone</h2>\n                        </div>\n                        <div className=\"thumbnail thumbnailDetails\">\n                            <div className=\"textDetails\">\n                                <h2>Flickr Clone</h2>\n                                <>\n                                    <div className=\"responsiveText\">\n                                        <p>\n                                            The FlickrClone is a website for users to upload and browse images about anything they want.\n                                            It is heavily inspired by <a href=\"https://flickr.com/\">Flickr.</a>\n                                            It's my personal favourite as this was the first time I worked completely alone\n                                            on a project and utilising my knowledge of React, Redux and REST API's along with\n                                            external API's to seed the database was a really fun experience.\n                                        </p>\n                                        <p>\n                                            I  did this fullstack application on a deadline of 5 days and\n                                            it was a great challenge to see how well I understood\n                                            React, Redux and REST API's.\n                                            Frontend is built with React. Backend is built with NodeJS,\n                                            Express, and Sequelize. The relational database management\n                                            system is a SQL database, that I've managed with\n                                            PostgresSQL on MAC OS.\n                                        </p>\n                                    </div>\n                                </>\n                                <>\n                                    <div className=\"textDetails__buttons\">\n                                        <button\n                                            onClick={() => {\n                                                setIsVideo1Displayed(true);\n                                            }}\n                                        >\n                                            <div>Watch the video</div>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                        <button>\n                                            <a href=\"https://flickrpixelclone.herokuapp.com/\">\n                                                Go to website\n                                            </a>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                    </div>\n                                </>\n                            </div>\n                        </div>\n                        {isVideo1Displayed ? (\n                            <div\n                                style={{\n                                    zIndex: getVideoDisplayed(1),\n                                }}\n                                className={\n                                    isVideo1Displayed ? \"thumbnail thumbnailVideo\" : \"hidden\"\n                                }\n                                onClick={() => {\n                                    setIsVideo1Displayed(false);\n                                }}\n                            >\n                                <div className=\"videoContainer\">\n                                    <video\n                                        autoPlay={true}\n                                        muted={true}\n                                        loop={false}\n                                        controls={true}\n                                    >\n                                        <source\n                                            src={\"/assets/videos/flickrdemo.mkv\"}\n                                            type=\"video/mp4\"\n                                        />\n                                    </video>\n                                </div>\n                            </div>\n                        ) : null}\n                    </div>\n                    <div className=\"project\">\n                        <div className=\"thumbnail project5\">\n                            <img\n                                src=\"/assets/logos/facebooklogo.ico\"\n                                alt=\"Facebook clone icon\"\n                            />\n                        </div>\n                        <div className=\"thumbnail thumbnailDetails\">\n                            <div className=\"textDetails\">\n                                <h2>Facebook-Cap</h2>\n                                <>\n                                    <div className=\"responsiveText\">\n                                        <p>\n                                            Facebook-Cap was my last project mandated by\n                                            appAcademy. This is a small social app mimicking\n                                            some social media functionality.\n                                            You can create your account, write some\n                                            posts with/without images. View, like, and comment on other\n                                            people's posts.\n                                            Some features are currently under development so\n                                            may not be shown.\n                                        </p>\n                                        <p>\n                                            This project is a fullstack app. The front part is coded\n                                            with ReactJS and Redux. Back-end is coded with Flask-SQLAlchemy, and\n                                            Python. The database is an SQL database, that I've\n                                            managed with PostgresSQL on MAC OS.\n                                            This apps main focus was to do a completely bug-free project in 3 days\n                                            that would take full advantage of the fullstack development skills I've acquired\n                                            along with a seamless user experience with AWS S3 and sockets.io.\n                                        </p>\n                                    </div>\n                                </>\n\n                                <>\n                                    <div className=\"textDetails__buttons\">\n                                        <button\n                                            onClick={() => {\n                                                setIsVideo1Displayed(true);\n                                            }}\n                                        >\n                                            <div>Watch the video</div>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                        <button>\n                                            <a href=\"https://facebook-cap.herokuapp.com/\">\n                                                Go to website\n                                            </a>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                    </div>\n                                </>\n                            </div>\n                        </div>\n                        {isVideo2Displayed ? (\n                            <div\n                                style={{\n                                    zIndex: getVideoDisplayed(2),\n                                }}\n                                className={\n                                    isVideo2Displayed ? \"thumbnail thumbnailVideo\" : \"hidden\"\n                                }\n                                onClick={() => {\n                                    setIsVideo2Displayed(false);\n                                }}\n                            >\n                                <div className=\"videoContainer\">\n                                    <video\n                                        autoPlay={true}\n                                        muted={true}\n                                        loop={false}\n                                        controls={true}\n                                    >\n                                        <source\n                                            src={\"/assets/videos/facebookdemo.mkv\"}\n                                            type=\"video/mp4\"\n                                        />\n                                    </video>\n                                </div>\n                            </div>\n                        ) : null}\n                    </div>\n                    <div className=\"project\">\n                        <div className=\"thumbnail project4\">\n                            <img src=\"/assets/logos/whodislogo.png\" alt=\"whodis icon\" />\n                        </div>\n                        <div className=\"thumbnail thumbnailDetails\">\n                            <div className=\"textDetails\">\n                                <h2>WhoDis</h2>\n                                <>\n                                    <div className=\"responsiveText\">\n                                        <p>\n                                            WhoDis is a Discord clone that's primary service is as a\n                                            messaging app that allows users to make servers,\n                                            channels inside servers and message their friends through those channels.\n                                            It is heavily inspired by <a href=\"https://discord.com/\">Discord.</a> and was\n                                            created as a collaborative project with a group of\n                                            3 other developers. It was a great challenge to see how well I\n                                            could work in a group of other engineers who have their own\n                                            style of development.\n                                        </p>\n                                        <p>\n                                            This project was coded with ReactJS, Redux for the frontend and Flask-SQLAlchemy, Python for the backend.\n                                            The database is an SQL database, that I've managed with PostgresSQL on MAC OS.\n                                        </p>\n                                    </div>\n                                </>\n\n                                <>\n                                    <div className=\"textDetails__buttons\">\n                                        <button\n                                            onClick={() => {\n                                                setIsVideo1Displayed(true);\n                                            }}\n                                        >\n                                            <div>Watch the video</div>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                        <button>\n                                            <a href=\"https://who-dis-app.herokuapp.com/\">\n                                                Go to website\n                                            </a>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                    </div>\n                                </>\n                            </div>\n                        </div>\n                        {isVideo3Displayed ? (\n                            <div\n                                style={{\n                                    zIndex: getVideoDisplayed(3),\n                                }}\n                                className={\n                                    isVideo3Displayed ? \"thumbnail thumbnailVideo\" : \"hidden\"\n                                }\n                                onClick={() => {\n                                    setIsVideo3Displayed(false);\n                                }}\n                            >\n                                <div className=\"videoContainer\">\n                                    <video\n                                        autoPlay={true}\n                                        muted={true}\n                                        loop={false}\n                                        controls={true}\n                                    >\n                                        <source\n                                            src={\"/assets/videos/whodisdemo.mkv\"}\n                                            type=\"video/mp4\"\n                                        />\n                                    </video>\n                                </div>\n                            </div>\n                        ) : null}\n                    </div>\n                    <div className=\"project\">\n                        <div className=\"thumbnail project3\">\n                            <img src=\"/assets/logos/snacklogo.png\" alt=\"Snack Overflow icon\" />\n                        </div>\n                        <div className=\"thumbnail thumbnailDetails\">\n                            <div className=\"textDetails\">\n                                <h2>Snack-Overflow</h2>\n                                <>\n                                    <div className=\"responsiveText\">\n                                        <p>\n                                            Snack Overflow Premium is a full-snack application to read and\n                                            learn about all of your favorite snacks.\n                                            A user will be able to read and post any inquiries as well as edit and delete their own.\n                                            This application was created as a collaborative project with a group of\n                                            3 other developers. This was actually my very first project and doing it with\n                                            a group of others was incredibly challenging as I was constantly learning how to\n                                            connect the data flow together.\n                                        </p>\n                                        <p>\n                                            This is my very first project and it was made using\n                                            vanilla JavaScript, HTML, and CSS along with PugJS.\n                                            The backend was a NodeJS server that was created with ExpressJS.\n                                            The database is an SQL database, that I've managed with PostgresSQL on MAC OS.\n                                            A LOT of new skills and small details went into this project and learning how\n                                            to create my own API's and create randomly generated JSON data was\n                                            a great fun experience.\n                                        </p>\n                                    </div>\n\n                                </>\n\n                                <>\n                                    <div className=\"textDetails__buttons\">\n                                        <button\n                                            onClick={() => {\n                                                setIsVideo1Displayed(true);\n                                            }}\n                                        >\n                                            <div>Watch the video</div>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                        <button>\n                                            <a href=\"https://snack-overflow-premium.herokuapp.com/\">\n                                                Go to website\n                                            </a>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                    </div>\n                                </>\n                            </div>\n                        </div>\n                        {isVideo4Displayed ? (\n                            <div\n                                style={{\n                                    zIndex: getVideoDisplayed(4),\n                                }}\n                                className={\n                                    isVideo4Displayed ? \"thumbnail thumbnailVideo\" : \"hidden\"\n                                }\n                                onClick={() => {\n                                    setIsVideo4Displayed(false);\n                                }}\n                            >\n                                <div className=\"videoContainer\">\n                                    <video\n                                        autoPlay={true}\n                                        muted={true}\n                                        loop={false}\n                                        controls={true}\n                                    >\n                                        <source\n                                            src={\"/assets/videos/snackoverflowdemo.mkv\"}\n                                            type=\"video/mp4\"\n                                        />\n                                    </video>\n                                </div>\n                            </div>\n                        ) : null}\n                        {/* </div>\n                    <div className=\"project\">\n                        <div className=\"thumbnail project2\">\n                            <img src=\"/assets/\" alt=\"\" />\n                        </div>\n                        <div className=\"thumbnail thumbnailDetails\">\n                            <div className=\"textDetails\">\n                                <h2></h2>\n                                <>\n                                    <div className=\"responsiveText\">\n                                        <p>\n\n                                        </p>\n                                        <p>\n\n                                        </p>\n                                    </div>\n                                </>\n\n                                <>\n                                    <div className=\"textDetails__buttons\">\n                                        <button\n                                            onClick={() => {\n                                                setIsVideo1Displayed(true);\n                                            }}\n                                        >\n                                            <div>Watch the video</div>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                        <button>\n                                            <a href=\"\">\n                                                Go to website\n                                            </a>\n                                            <div className=\"barHover\"></div>\n                                        </button>\n                                    </div>\n                                </>\n                            </div>\n                        </div> */}\n                    </div>\n                </section>\n            </motion.main>\n        </>\n    );\n};\n\nexport default Projects;\n","/Users/Dedition/Downloads/Portfolio/newport/src/components/WorkPage/Work.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/components/MenuPage/MenuPage.js",[],[],"/Users/Dedition/Downloads/Portfolio/newport/src/components/MenuPage/MenuList.js",["82"],[],"import { useState, useContext } from \"react\";\nimport { MenuContext } from \"../../context/MenuContext\";\nimport { Link } from \"react-router-dom\";\n\nconst MenuList = () => {\n    const { setMenuText } = useContext(MenuContext);\n    const [isProjectHovered, setIsProjectHovered] = useState(false);\n    const [isWorkHovered, setIsWorkHovered] = useState(false);\n    const [isContactHovered, setIsContactHovered] = useState(false);\n    const [isAboutHovered, setIsAboutHovered] = useState(false);\n    const [isSkillHovered, setIsSkillHovered] = useState(false);\n\n    return (\n        <ul className=\"MenuList__list\">\n            <li\n                onMouseEnter={() => {\n                    setMenuText(\"About\");\n                    setIsAboutHovered(true);\n                    setIsProjectHovered(false);\n                    setIsWorkHovered(false);\n                    setIsContactHovered(false);\n                    setIsSkillHovered(false)\n                }}\n                onMouseLeave={() => setMenuText(\"\")}\n                className=\"MenuList__item\"\n            >\n                <Link to=\"/about\" className=\"MenuList__link\">\n                    {isAboutHovered ? (\n                        <p className=\"primaryText \">\n                            About Me\n                        </p>\n                    ) : (\n                        <p className=\"secondaryText \">\n                            About\n                        </p>\n                    )\n                    }\n                </Link>\n                <div className={isAboutHovered ? \"MenuList__indicator\" : \"MenuList__indicator--hidden\"}></div>\n            </li>\n            <li\n                onMouseEnter={() => {\n                    setMenuText(\"Skills\");\n                    setIsSkillHovered(true)\n                    setIsProjectHovered(false);\n                    setIsWorkHovered(false);\n                    setIsContactHovered(false);\n                    setIsAboutHovered(false);\n                }}\n                onMouseLeave={() => setMenuText(\"\")}\n                className=\"MenuList__item\"\n            >\n                <Link to=\"/skills\" className=\"MenuList__link\">\n                    {isSkillHovered ? (\n                        <p className=\"primaryText\">\n                            Skills\n                        </p>\n                    ) : (\n                        <p className=\"secondaryText\">\n                            Skills\n                        </p>\n                    )}\n                </Link>\n                <div className={isSkillHovered ? \"MenuList__indicator\" : \"MenuList__indicator--hidden\"}></div>\n            </li>\n            <div className={isContactHovered ? \"MenuList__indicator\" : \"MenuList__indicator--hidden\"}></div>\n            <li\n                onMouseEnter={() => {\n                    setMenuText(\"Projects\");\n                    setIsProjectHovered(true);\n                    setIsWorkHovered(false);\n                    setIsContactHovered(false);\n                    setIsAboutHovered(false);\n                    setIsSkillHovered(false)\n                }\n                }\n                onMouseLeave={() => setMenuText(\"\")}\n                className=\"MenuList__item\"\n            >\n                <Link to=\"/projects\" className=\"MenuList__link\">\n                    {isProjectHovered ? (\n                        <p className=\"primaryText\">\n                            Projects\n                        </p>\n                    ) : (\n                        <p className=\"secondaryText\">\n                            Projects\n                        </p>\n                    )}\n                </Link>\n                <div className={isProjectHovered ? \"MenuList__indicator\" : \"MenuList__indicator--hidden\"}></div>\n            </li>\n            {/* <li\n                onMouseEnter={() => {\n                    setMenuText(\"Work\")\n                    setIsWorkHovered(true);\n                    setIsProjectHovered(false);\n                    setIsContactHovered(false);\n                    setIsAboutHovered(false);\n                    setIsSkillHovered(false)\n                }\n                }\n                onMouseLeave={() => setMenuText(\"Work\")}\n                className=\"MenuList__item\"\n            >\n                <Link to=\"/work\" className=\"MenuList__link\">\n                    {isWorkHovered ? (\n                        <p className=\"primaryText \">\n                            My Resume\n                        </p>\n                    ) : (\n                        <p className=\"secondaryText \">\n                            Resume\n                        </p>\n                    )}\n                </Link>\n                <div className={isWorkHovered ? \"MenuList__indicator\" : \"MenuList__indicator--hidden\"}></div>\n            </li> */}\n            {/* <li\n                onMouseEnter={() => {\n                    setMenuText(\"Contact\");\n                    setIsContactHovered(true);\n                    setIsProjectHovered(false);\n                    setIsWorkHovered(false);\n                    setIsAboutHovered(false);\n                    setIsSkillHovered(false)\n                }\n                }\n                onMouseLeave={() => setMenuText(\"\")}\n                className=\"MenuList__item\"\n            >\n                <Link to=\"/contact\" className=\"MenuList__link\">\n                    {isContactHovered ? (\n                        <p className=\"primaryText\">\n                            Contact Me\n                        </p>\n                    ) : (\n                        <p className=\"secondaryText\">\n                            Contact\n                        </p>\n                    )}\n                </Link>\n                <div className={isContactHovered ? \"MenuList__indicator\" : \"MenuList__indicator--hidden\"}></div>\n            </li> */}\n        </ul>\n    );\n}\n\n\nexport default MenuList;\n",{"ruleId":"83","severity":1,"message":"84","line":13,"column":8,"nodeType":"85","messageId":"86","endLine":13,"endColumn":12},{"ruleId":"83","severity":1,"message":"87","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":29},{"ruleId":"83","severity":1,"message":"87","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":29},{"ruleId":"83","severity":1,"message":"88","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":19},{"ruleId":"83","severity":1,"message":"89","line":3,"column":21,"nodeType":"85","messageId":"86","endLine":3,"endColumn":29},{"ruleId":"83","severity":1,"message":"90","line":6,"column":11,"nodeType":"85","messageId":"86","endLine":6,"endColumn":15},{"ruleId":"83","severity":1,"message":"91","line":11,"column":12,"nodeType":"85","messageId":"86","endLine":11,"endColumn":29},{"ruleId":"83","severity":1,"message":"92","line":11,"column":31,"nodeType":"85","messageId":"86","endLine":11,"endColumn":51},{"ruleId":"83","severity":1,"message":"93","line":12,"column":12,"nodeType":"85","messageId":"86","endLine":12,"endColumn":29},{"ruleId":"83","severity":1,"message":"94","line":12,"column":31,"nodeType":"85","messageId":"86","endLine":12,"endColumn":51},{"ruleId":"83","severity":1,"message":"95","line":8,"column":12,"nodeType":"85","messageId":"86","endLine":8,"endColumn":25},"no-unused-vars","'Work' is defined but never used.","Identifier","unusedVar","'animated' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'anim' is assigned a value but never used.","'isVideo5Displayed' is assigned a value but never used.","'setIsVideo5Displayed' is assigned a value but never used.","'isVideo6Displayed' is assigned a value but never used.","'setIsVideo6Displayed' is assigned a value but never used.","'isWorkHovered' is assigned a value but never used."]